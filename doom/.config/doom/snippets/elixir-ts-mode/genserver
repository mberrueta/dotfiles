# -*- mode: snippet -*-
# name: elixir_genserver
# key: gensrv
# --
defmodule ${1:ModuleName} do
  use GenServer

  # Client API

  @doc """
  Starts the GenServer
  """
  def start_link(args) do
    GenServer.start_link(__MODULE__, args, name: __MODULE__)
  end

  # Server Callbacks

  @doc """
  Initializes the server's state
  """
  def init(args) do
    {:ok, args}
  end

  @doc """
  Handles synchronous calls
  """
  def handle_call(:get_state, _from, state) do
    {:reply, state, state}
  end

  @doc """
  Handles asynchronous messages
  """
  def handle_cast({:put_state, new_state}, state) do
    {:noreply, new_state}
  end

  @doc """
  Handles all other messages
  """
  def handle_info(_msg, state) do
    {:noreply, state}
  end
end

